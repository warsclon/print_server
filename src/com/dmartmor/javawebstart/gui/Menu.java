/*******************************************************************************
 * Copyright 2012 See AUTHORS file.
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ******************************************************************************/
/*
 * Copyright 2012 Diego Martin Moreno (dmartmorsoft@gmail.com)
 * 
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the
 * License. You may obtain a copy of the License at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS"
 * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */
package com.dmartmor.javawebstart.gui;

import com.jeans.trayicon.*;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.*;
import java.awt.event.*;
import java.io.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.Icon;
import javax.swing.JOptionPane;
import org.apache.log4j.Category;

/**
 * <p>Copyright: Copyright (c) 2012</p>
 * @author Diego Martín Moreno
 * @version 1.0
 */
public class Menu extends javax.swing.JFrame {
    
    
    static Category log = Category.getInstance(Menu.class.getName());
    
    /** Creates new form Menu */
    public Menu() {
        initComponents();
        try {
            InitIcon();
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea = new javax.swing.JTextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        getContentPane().setLayout(new java.awt.GridBagLayout());

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Hemasoft");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowIconified(java.awt.event.WindowEvent evt) {
                formWindowIconified(evt);
            }
        });

        jScrollPane1.setMinimumSize(new java.awt.Dimension(100, 50));
        jTextArea.setColumns(40);
        jTextArea.setEditable(false);
        jTextArea.setRows(12);
        jScrollPane1.setViewportView(jTextArea);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(9, 9, 9, 9);
        getContentPane().add(jScrollPane1, gridBagConstraints);

        jMenu1.setText("Menu");
        jMenuItem1.setText("About");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });

        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
// TODO add your handling code here:
        JOptionPane.showMessageDialog(this, "version 0.1");
    }//GEN-LAST:event_jMenuItem1ActionPerformed
    
    //Llama cuando crea el icono
    private void formWindowIconified(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowIconified
        doHide();
    }//GEN-LAST:event_formWindowIconified
        
    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        log.info("closed");
        // Free all Tray Icon resources - always call this on exit
        WindowsTrayIcon.cleanUp();
        // Exit application
        System.exit(0);
    }//GEN-LAST:event_formWindowClosed
        
    public static void pintar(String log) {
        String texto = jTextArea.getText();
        jTextArea.setText(texto+log+"\n");
    }
    
    private void InitIcon()  throws Exception {
        if (WindowsTrayIcon.isRunning("TestApp")) {
            // App already running, show error message and exit
        }
        WindowsTrayIcon.initTrayIcon("TestApp");
        
        
        
        java.net.URL imageURL = getClass().getClassLoader().getResource("com/dmartmor/javawebstart/images/Duke16.gif");
        log.info("image"+imageURL.getPath());
        Image image = null;
        if (imageURL != null) {
            image = Toolkit.getDefaultToolkit().getImage(imageURL);
        }
        WindowsTrayIcon.setWindowsMessageCallback(new WindowsMessageCallback());
        WindowsTrayIcon icon = new WindowsTrayIcon(image, 16, 16);
        icon.setToolTipText("Printer");
        icon.addActionListener(new HideListener());
        icon.setVisible(true);
    }
    
// Callback listener for hide button
    private class HideListener implements ActionListener {
        public void actionPerformed(ActionEvent evt) {
            doVisible();
        }
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Menu().setVisible(true);
            }
        });
    }
    
    
    private class WindowsMessageCallback implements TrayIconCallback {
        
        public int callback(int param) {
            // Param contains the integer value send with sendWindowsMessage(appName, param)
            System.out.println("Other instance started (parameter: "+param+")");
            // Return integer value to other process
            return 4321;
        }
        
    }

    // Called when app exits
    public void doExit() {
        System.out.println("[Exit selected / Close requested].");
        
        // Free all Tray Icon resources - always call this on exit
        WindowsTrayIcon.cleanUp();
        
        // Exit application
        System.exit(0);
    }
    
    
    // Called when app must be hidden
    public void doVisible() {
        log.debug("Do Visible");
        setVisible(true);
        show();
    }
    
    // Called when app must be hidden
    public void doHide() {
        log.debug("do Hide");
        setVisible(false);
    }
    
    // Select a different type of menu (AWT or Swing)
    public void doUpdateMenu(boolean awtSwing, boolean engZh) {
        System.out.println("doUpdateMenu");
    }
    
// Callback listener handles exit button / exit popup menu
    private class ExitListener implements ActionListener {
        
        public void actionPerformed(ActionEvent evt) {
            doExit();
        }
    }
    
    // Called when close button in window title bar is selected
    public class WindowClosingListener extends WindowAdapter {
        
        public void windowClosing(WindowEvent e) {
            doHide();
        }
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JScrollPane jScrollPane1;
    private static javax.swing.JTextArea jTextArea;
    // End of variables declaration//GEN-END:variables
    
}
